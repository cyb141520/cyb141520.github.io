{
    "version": "https://jsonfeed.org/version/1",
    "title": "此时相望不相闻，愿逐月华流照君 • All posts by \"phppwn\" tag",
    "description": "",
    "home_page_url": "https://vvwwvv.cn",
    "items": [
        {
            "id": "https://vvwwvv.cn/2023/05/04/pwn/webpwn/phppwn/",
            "url": "https://vvwwvv.cn/2023/05/04/pwn/webpwn/phppwn/",
            "title": "webpwn初学习（php篇）",
            "date_published": "2023-05-04T11:33:55.000Z",
            "content_html": "<h1 id=\"1前置知识\"><a class=\"anchor\" href=\"#1前置知识\">#</a> 1. 前置知识</h1>\n<h1 id=\"2环境搭建\"><a class=\"anchor\" href=\"#2环境搭建\">#</a> 2. 环境搭建</h1>\n<p>这里有个坑，在 php8.1.12 版本有些代码行不通，应该是版本问题，后来改成 php7.2.24 后就可以了，所以下面的配置最好按照 7.2.24 来进行</p>\n<h2 id=\"1php拓展安装\"><a class=\"anchor\" href=\"#1php拓展安装\">#</a> 1.PHP 拓展安装</h2>\n<p>下面是是 PHP 拓展模块的安装流程，我这个是在 ubuntu22.04 下安装的</p>\n<p>首先是安装 php，以及 php 开发包</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> php php-dev</pre></td></tr></table></figure><p>安装完后利用 <code>php --version</code>  查看当前 php 版本</p>\n<p>我这里是 <code>PHP 8.1.12-1ubuntu4.3 (cli)</code> , 所以从下面的链接找到 8.1.12 的源码下载下来，然后解压</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BocC9waHAtc3JjL3JlbGVhc2Vz\">https://github.com/php/php-src/releases</span></p>\n<p>源代码目录结构如下所示 (这里是 php7.2.24 的，新版本可能会有所出入)：</p>\n<pre><code>php-7.2.24\n  |____build    --和编译有关的目录，里面包括wk，awk和sh脚本用于编译处理，其中m4文件是linux下编译程序自动生成的文件，可以使用buildconf命令操作具体的配置文件。\n  |____ext      --扩展库代码，例如Mysql，gd，zlib，xml，iconv 等我们熟悉的扩展库，ext_skel是linux下扩展生成脚本，windows下使用ext_skel_win32.php。\n  |____main     --主目录，包含PHP的主要宏定义文件，php.h包含绝大部分PHP宏及PHP API定义。\n  |____netware  --网络目录，只有sendmail_nw.h和start.c，分别定义SOCK通信所需要的头文件和具体实现。\n  |____pear     --扩展包目录，PHP Extension and Application Repository。\n  |____sapi     --各种服务器的接口调用，如Apache，IIS等。\n  |____scripts  --linux下的脚本目录。\n  |____tests    --测试脚本目录，主要是phpt脚本，由--TEST--，--POST--，--FILE--，--EXPECT--组成，需要初始化可添加--INI--部分。\n  |____TSRM     --线程安全资源管理器，Thread Safe Resource Manager保证在单线程和多线程模型下的线程安全和代码一致性。\n  |____win32    --Windows下编译PHP 有关的脚本。\n  |____Zend     --包含Zend引擎的所有文件，包括PHP的生命周期，内存管理，变量定义和赋值以及函数宏定义等等。\n\n</code></pre>\n<h3 id=\"拓展模块的开发\"><a class=\"anchor\" href=\"#拓展模块的开发\">#</a> 拓展模块的开发</h3>\n<p>首先进入源代码目录 <code>ext</code>  文件夹，使用如下目录生成拓展模块的工程项目。该程序会直接为我们生成一个模板 (这里在看别人教程的时候发现是用的 <code>./ext_skel --extname=easy_phppwn</code> ，这应该是老版本，新版本下会有个 <code>ext_skel.php</code>  文件)</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./ext_skel.php <span class=\"token parameter variable\">--ext</span> easy_phppwn  <span class=\"token comment\">#php8.1.12</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>./ext_skel <span class=\"token parameter variable\">--extname</span><span class=\"token operator\">=</span>easy_phppwn <span class=\"token comment\">#php7.2.24</span></pre></td></tr></table></figure><p><img data-src=\"https://vvwwv.oss-cn-nanjing.aliyuncs.com/phppwn/JFISXR%603U%28%28E4LG75SQFD%25T.png\" alt=\"\" /></p>\n<p>执行完后就会在 <code>ext</code>  文件夹里产生一个  <code>easy_phppwn</code>  文件夹</p>\n<p>在 <code>easy_phppwn</code>  文件夹内查看 <code>easy_phppwn.c</code> ，初始代码 (这里是 php8.1.12 的，在 php7.2.24 就不会有 test 函数)：</p>\n<pre><code>\n/* easy_phppwn extension for PHP */\n\n#ifdef HAVE_CONFIG_H\n# include &quot;config.h&quot;\n#endif\n\n#include &quot;php.h&quot;\n#include &quot;ext/standard/info.h&quot;\n#include &quot;php_easy_phppwn.h&quot;\n#include &quot;easy_phppwn_arginfo.h&quot;\n\n/* For compatibility with older PHP versions */\n#ifndef ZEND_PARSE_PARAMETERS_NONE\n#define ZEND_PARSE_PARAMETERS_NONE() \\\n\tZEND_PARSE_PARAMETERS_START(0, 0) \\\n\tZEND_PARSE_PARAMETERS_END()\n#endif\n\n/* &#123;&#123;&#123; void test1() */\nPHP_FUNCTION(test1)\n&#123;\n\tZEND_PARSE_PARAMETERS_NONE();\n\n\tphp_printf(\"The extension %s is loaded and working!\\r\\n\", \"easy_phppwn\");\n&#125;\n/* &#125;&#125;&#125; */\n\n/* &#123;&#123;&#123; string test2( [ string $var ] ) */\nPHP_FUNCTION(test2)\n&#123;\n\tchar *var = \"World\";\n\tsize_t var_len = sizeof(\"World\") - 1;\n\tzend_string *retval;\n\n\tZEND_PARSE_PARAMETERS_START(0, 1)\n\t\tZ_PARAM_OPTIONAL\n\t\tZ_PARAM_STRING(var, var_len)\n\tZEND_PARSE_PARAMETERS_END();\n\n\tretval = strpprintf(0, \"Hello %s\", var);\n\n\tRETURN_STR(retval);\n&#125;\n/* &#125;&#125;&#125;*/\n\n/* &#123;&#123;&#123; PHP_RINIT_FUNCTION */\nPHP_RINIT_FUNCTION(easy_phppwn)\n&#123;\n#if defined(ZTS) && defined(COMPILE_DL_EASY_PHPPWN)\n\tZEND_TSRMLS_CACHE_UPDATE();\n#endif\n\n\treturn SUCCESS;\n&#125;\n/* &#125;&#125;&#125; */\n\n/* &#123;&#123;&#123; PHP_MINFO_FUNCTION */\nPHP_MINFO_FUNCTION(easy_phppwn)\n&#123;\n\tphp_info_print_table_start();\n\tphp_info_print_table_header(2, \"easy_phppwn support\", \"enabled\");\n\tphp_info_print_table_end();\n&#125;\n/* &#125;&#125;&#125; */\n\n/* &#123;&#123;&#123; easy_phppwn_module_entry */\nzend_module_entry easy_phppwn_module_entry = &#123;\n\tSTANDARD_MODULE_HEADER,\n\t\"easy_phppwn\",\t\t\t\t\t/* Extension name */\n\text_functions,\t\t\t\t\t/* zend_function_entry */\n\tNULL,\t\t\t\t\t\t\t/* PHP_MINIT - Module initialization */\n\tNULL,\t\t\t\t\t\t\t/* PHP_MSHUTDOWN - Module shutdown */\n\tPHP_RINIT(easy_phppwn),\t\t\t/* PHP_RINIT - Request initialization */\n\tNULL,\t\t\t\t\t\t\t/* PHP_RSHUTDOWN - Request shutdown */\n\tPHP_MINFO(easy_phppwn),\t\t\t/* PHP_MINFO - Module info */\n\tPHP_EASY_PHPPWN_VERSION,\t\t/* Version */\n\tSTANDARD_MODULE_PROPERTIES\n&#125;;\n/* &#125;&#125;&#125; */\n\n#ifdef COMPILE_DL_EASY_PHPPWN\n# ifdef ZTS\nZEND_TSRMLS_CACHE_DEFINE()\n# endif\nZEND_GET_MODULE(easy_phppwn)\n#endif\n\n</code></pre>\n<p>我们只需要在该模板代码中，加上属于我们自己的函数，以及为函数进行注册，即可完成编写一个拓展模块；添加自己的函数 (在生成的模板函数中，添加一个如下所示的拓展函数，其含有一个简单的栈溢出漏洞)：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>c</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">PHP_FUNCTION</span><span class=\"token punctuation\">(</span>easy_phppwn<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>arg <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">size_t</span> arg_len<span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">zend_parse_parameters</span><span class=\"token punctuation\">(</span><span class=\"token function\">ZEND_NUM_ARGS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"s\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>arg<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>arg_len<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> FAILURE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span> arg<span class=\"token punctuation\">,</span> arg_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">php_printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The baby phppwn.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>其中 <code> PHP_FUNCTION</code>  修饰的函数表示该函数可以直接在 <code>php</code>  中进行调用。而 <code> zend_parse_parameters</code>  函数是获取用户输入的参数。 <code>arg</code>  代表参数字符， <code>arg_len</code>  代表参数长度</p>\n<p>然后，需要在 <code>zend_function_entry easy_phppwn_functions</code>  中对该函数进行注册，(也就是配置该拓展函数，将需要在 php 中调用的函数指针写到一个统一的数组中)</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>c</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> zend_function_entry easy_phppwn_functions<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token function\">PHP_FE</span><span class=\"token punctuation\">(</span>confirm_easy_phppwn_compiled<span class=\"token punctuation\">,</span>\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token comment\">/* For testing, remove later. */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token function\">PHP_FE</span><span class=\"token punctuation\">(</span>easy_phppwn<span class=\"token punctuation\">,</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 只需要添加这一行就行，在这里进行注册，然后注册个刚刚写的函数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tPHP_FE_END\t<span class=\"token comment\">/* Must be the last line in webpwn_functions[] */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>接着配置编译</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/usr/bin/phpize</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>./configure --with-php-config<span class=\"token operator\">=</span>/usr/bin/php-config</pre></td></tr></table></figure><p>然后在生成的 Makefile 文件中，在如下位置设置编译参数，记得取消 <code>-O2</code>  优化，否则会加上 <code>FORTIFY</code>  保护，导致 <code>memcpy</code>  函数加上长度检查变为 <code>__memcpy_chk</code>  函数</p>\n<p>在第 25 行（php7.2.24 在 27 行）：</p>\n<pre><code>CFLAGS = -g -O2\n</code></pre>\n<p>去掉这个  <code>-O2</code></p>\n<p>可以使用  <code>make</code>  指令编译生成拓展模块，新生成的拓展模块会被放在同目录下  <code>./modules</code>  中</p>\n<p><img data-src=\"https://vvwwv.oss-cn-nanjing.aliyuncs.com/phppwn/NU%24%5BN6A4L1%24CWU73JS%7EQT5L.png\" alt=\"\" /></p>\n<p>然后将新生成的拓展模块放置到 本地 php 所在的拓展库路径下，使用如下命令，查找本地 php 拓展库路径：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>php <span class=\"token parameter variable\">-i</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-i</span> extension_dir</pre></td></tr></table></figure><p><img data-src=\"https://vvwwv.oss-cn-nanjing.aliyuncs.com/phppwn/NW%28W5X18%7B%5BW%25SN%28Z0RZ%7D%40FV.png\" alt=\"\" /><br />\n<img data-src=\"https://vvwwv.oss-cn-nanjing.aliyuncs.com/phppwn/8%7B%7D7SYQ%7BQ%25O8WYIYYSN9%29XI.png\" alt=\"\" /></p>\n<p>将新生成的 拓展模块放置在系统  <code>php</code>  的 拓展模块路径内</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mv</span> easy_phppwn.so /usr/lib/php/20210902/</pre></td></tr></table></figure><p><img data-src=\"https://vvwwv.oss-cn-nanjing.aliyuncs.com/phppwn/EQ_AY2FGXDFN3%7DZ%293B%60SYZ1.png\" alt=\"\" /></p>\n<p>随后找到系统  <code>php.ini</code>  路径 <code>php -i | grep -i php.ini</code>  :</p>\n<p><img data-src=\"https://vvwwv.oss-cn-nanjing.aliyuncs.com/phppwn/DAM_Y%5D8V%7B%60I%60%25D%29%40_%7ETF_CS.png\" alt=\"\" /></p>\n<p>在 php.ini 文件里添加自行编写的拓展库名称即可，直接在文件末尾添加如下代码:</p>\n<pre><code>extension=easy_phppwn.so\n</code></pre>\n<p>完成之后，可以尝试写一个 test.php 文件，在其中调用 phpinfo () 函数，然后可以看到 easy_phppwn 已经被加载到系统中</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>执行 <code>php test.php | grep easy_phppwn</code></p>\n<p><img data-src=\"https://vvwwv.oss-cn-nanjing.aliyuncs.com/phppwn/BYU7E0%5DXP%24GWU%5DHG%5BSBGC%286.png\" alt=\"\" /></p>\n<h1 id=\"3php拓展模块调试\"><a class=\"anchor\" href=\"#3php拓展模块调试\">#</a> 3.php 拓展模块调试</h1>\n<p>可以先用 gdb 看一下（这里不能进行动态调试）：</p>\n<p><img data-src=\"https://vvwwv.oss-cn-nanjing.aliyuncs.com/phppwn/9UNB%24VO00_GFKKPNZ_%25F%5DWQ.png\" alt=\"\" /></p>\n<p>想要动态调试，需要对 <code>php</code>  进行调试（需要在根目录下），通过 <code>gdb php</code> ，然后可以进行下断点，这里要调试 <code>easy_phppwn</code>  就对函数 <code>zif_easy_phppwn</code>  下断点，然后 run 即可</p>\n<p>将得到的 php 拓展文件（ <code>.so</code>  文件）利用 <code>ida</code>  打开 ，找到 <code>zif_easy_phppwn</code>  函数，这里重点分析该函数</p>\n<h2 id=\"php8112中\"><a class=\"anchor\" href=\"#php8112中\">#</a> php8.1.12 中：</h2>\n<p>【在 php8.1.12 中少了 memcpy 函数，这就导致无法溢出。。。。】<br />\n<img data-src=\"https://vvwwv.oss-cn-nanjing.aliyuncs.com/phppwn/%5BP4%28%24%7D%5D%60H_%25Q%6022ONE%25%5D_BD.png\" alt=\"\" /></p>\n<p>gdb 查看 (也没有 T^T)：</p>\n<p><img data-src=\"https://vvwwv.oss-cn-nanjing.aliyuncs.com/phppwn/%24%40EIJ%28JH%5BL1S8%28US7%5BR0%7BP0.png\" alt=\"\" /></p>\n<h2 id=\"php7224下\"><a class=\"anchor\" href=\"#php7224下\">#</a> php7.2.24 下：</h2>\n<p><img data-src=\"https://vvwwv.oss-cn-nanjing.aliyuncs.com/phppwn/APHYTBNU8A%7DQ9AB%7BM%28%24PM%7EW.png\" alt=\"\" /></p>\n<p><img data-src=\"https://vvwwv.oss-cn-nanjing.aliyuncs.com/phppwn/8Q%7E%40E%5B4GRWY%5B5USM6CSDB8L.png\" alt=\"\" /></p>\n<p>编写一个 php 文件 (test.php) 调用 <code>easy_phppwn函数</code> 试一下：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"><span>p</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"11223\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">easy_phppwn</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p><code>php test.php</code>  运行：</p>\n<p>可以看到输出了 <code>The baby phppwn</code>  运行成功了，而上面一行说已经加载了，可能是之前编译了好几次导致的</p>\n<h2 id=\"调试以及编写exp\"><a class=\"anchor\" href=\"#调试以及编写exp\">#</a> 调试以及编写 exp：</h2>\n",
            "tags": [
                "phppwn",
                "ctf"
            ]
        }
    ]
}