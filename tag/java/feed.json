{
    "version": "https://jsonfeed.org/version/1",
    "title": "Blog • All posts by \"java\" tag",
    "description": "",
    "home_page_url": "https://vvwwvv.cn",
    "items": [
        {
            "id": "https://vvwwvv.cn/2023/09/10/Java/Java%E4%BD%9C%E4%B8%9A2/",
            "url": "https://vvwwvv.cn/2023/09/10/Java/Java%E4%BD%9C%E4%B8%9A2/",
            "title": "Java作业2023/9/10(作业7)",
            "date_published": "2023-09-10T08:35:45.000Z",
            "content_html": "<h1 id=\"7编写程序测试1~50的阶乘所消耗的毫米级时间\"><a class=\"anchor\" href=\"#7编写程序测试1~50的阶乘所消耗的毫米级时间\">#</a> 7. 编写程序，测试 1~50 的阶乘所消耗的毫米级时间</h1>\n<h2 id=\"1计算阶乘用while循环即可\"><a class=\"anchor\" href=\"#1计算阶乘用while循环即可\">#</a> 1. 计算阶乘：用 while 循环即可</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>a</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//n 即为想要算阶乘的数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>s<span class=\"token operator\">*=</span>i            <span class=\"token comment\">//s 为阶乘计算的结果</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>i<span class=\"token operator\">=</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"2计算毫时间差\"><a class=\"anchor\" href=\"#2计算毫时间差\">#</a> 2. 计算毫时间差</h2>\n<p>需要头文件</p>\n<pre><code>import java.util.Date;\n</code></pre>\n<p>1. 计算毫米级时间</p>\n<p>用时间戳：System.currentTimemillis (); 这是一个<strong>长整型数</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>a</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">long</span> startMillis <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 中间为所执行代码</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">long</span> endMillis <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>endMillis <span class=\"token operator\">-</span> startMillis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出时间差</span></pre></td></tr></table></figure><p>2. 计算纳米级时间</p>\n<p>用时间戳：System.nanoTime (); 使用方法与上面相同，做替换即可</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>a</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">long</span> startnano <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">nanoTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 中间为所执行代码</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">long</span> endnano <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">nanoTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>endnano <span class=\"token operator\">-</span> startnano<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出时间差</span></pre></td></tr></table></figure><p>参考:<span class=\"exturl\" data-url=\"aHR0cDovL3QuY3Nkbi5jbi9nN2lmTQ==\">http://t.csdn.cn/g7ifM</span></p>\n<h2 id=\"3计算大数的阶乘\"><a class=\"anchor\" href=\"#3计算大数的阶乘\">#</a> 3. 计算大数的阶乘</h2>\n<p>由于计算的阶乘结果数据很大，long 型无法保存，所以需要用 BigInteger 型</p>\n<p>需要头文件</p>\n<pre><code>import java.math.BigInteger;\n</code></pre>\n<p>用 BigInteger 来定义时：</p>\n<p><code>BigInteger s = new BigInteger(&quot;1&quot;);</code>  给 s 赋值为 1</p>\n<p>将 int 类型转化成 BigInteger, 可以用如下方式：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>a</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">long</span> i <span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">BigInteger</span> t<span class=\"token operator\">=</span><span class=\"token class-name\">Biginteger</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 用 t 来记录大数型的 i 值</span></pre></td></tr></table></figure><p><span class=\"exturl\" data-url=\"aHR0cDovL3QuY3Nkbi5jbi9aOFZFVQ==\">http://t.csdn.cn/Z8VEU</span></p>\n<h2 id=\"代码实现\"><a class=\"anchor\" href=\"#代码实现\">#</a> 代码实现：</h2>\n<p>因为用豪秒级时间差为 0，所以改用纳秒级</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>a</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>math<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BigInteger</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Date</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">long</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">long</span> n <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span> n<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">// 从 1（n=1）的阶乘开始</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\">BigInteger</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BigInteger</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 每次循环重置成 1</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">long</span> startMillis <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">long</span> start <span class=\"token operator\">=</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">nanoTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 用纳秒级记录，因为更精准所以放里面防止被干扰</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>                         <span class=\"token comment\">// 计算每个的阶乘</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token class-name\">BigInteger</span> t<span class=\"token operator\">=</span><span class=\"token class-name\">BigInteger</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 用 t 来记录转成大数型的 i</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                s<span class=\"token operator\">=</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 不能直接是 s.multiply ()</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                i<span class=\"token operator\">=</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token string\">\" 的阶乘为： \"</span><span class=\"token operator\">+</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">long</span> end <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">nanoTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 纳秒记录结尾时间戳</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">long</span> endMillis <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">+</span> <span class=\"token string\">\" 的阶乘所消耗的 豪秒 级时间为 \"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>endMillis <span class=\"token operator\">-</span> startMillis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">+</span> <span class=\"token string\">\" 的阶乘所消耗的 纳秒 级时间为 \"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">-</span> start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 重置</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://ooo.0x0.ooo/2023/09/10/OnK556.md.png\" alt=\"\" /></p>\n",
            "tags": [
                "Java"
            ]
        }
    ]
}